<%# app/views/code_libraries/index.html.erb %>
<% breadcrumb :code_libraries %>
<%= render "shared/breadcrumbs" %>

<%# ページ <title> 用 %>
<% content_for :title, "Code Library" %>

<%# ===== ヘッダーブロック ===== %>
<div class="mb-6">
  <div class="text-center">
    <h1 class="text-2xl font-semibold">Code Library</h1>
    <p class="mt-1 text-sm text-slate-500">~ 初期データ閲覧機能 ~</p>
  </div>

  <!-- 🔰 初めての方へ -->
  <section
    class="-mt-2 mb-2"
    data-controller="reveal"
    data-reveal-open-label-value="🔰 初めての方へ"
    data-reveal-close-label-value="🔰 説明を閉じる">
    <div class="flex justify-end">
      <button type="button"
              class="btn-toggle"
              data-reveal-target="button"
              data-action="reveal#toggle">🔰 初めての方へ</button>
    </div>
    <div class="hidden mt-2" data-reveal-target="content">
      <pre class="whitespace-pre-wrap leading-relaxed text-slate-700 bg-white ring-1 ring-slate-200 rounded-lg p-4 text-[15px]">
💻 Code Library機能へようこそ！！
Code Libraryは、他ユーザーが作成した初期データを閲覧・利用できる機能です。


【初期データって何？？】

初期データとは、コードエディタのエディタフォームに
あらかじめ登録しておいたコード断片（スニペット）を自動入力する機能です。

といっても、言葉で説明しても分かりづらいと思うので、
以下で例え話を例にして説明していきますね！


たとえば、Rubyの標準メソッドに「min」ってメソッドがありますよね。

以下のような配列numbersがあった時、
その配列の中の最小値「４」を抽出するコードです。

==================例題コード======================

numbers = [42, 7, 19, 73, 4, 58, 91, 26, 11, 65]

puts numbers.min
# => 4

================================================


この「min」について、
コードエディタを用いた実践的な学習をしたいと思った時、
毎回初期データとして、配列numbersを用意しないといけません。

上記のように配列numbersを定義してからでないと、
numbers.minの意味が通らなくなってしまいます。


でも、毎回配列numbersを定義するのって、
めんどくさくないですか？？

まぁ、上記の配列numbersくらいなら良いかもしれませんが、
別のRuby標準メソッドを試すために、
もっとややこしく、コード量も多い初期データが必要ならどうでしょうか？

そのメソッドを試すために、
毎回その初期データを入力しないといけないとしたらどうですか？？

少なくとも私はめんどくさいと思います。

なので、普段よく利用する初期データを登録・保存しておいて、
「コードエディタでRuby標準メソッドの復習をするときに楽をしよう！」
という考えのもと生み出されたのが初期データ登録機能、
つまり、PreCode機能です。

そして、他ユーザーの初期データを
閲覧・利用するための機能がCode Library機能です。



【Code Library機能について】

先ほどから、他ユーザーと言っているように、
自分の作成した初期データはCode Libraryでは表示されず、
他ユーザーが作成した初期データを閲覧・利用するための機能になります。


Code Libraryにはブックマーク機能があり、
ブックマーク登録をすると、コードエディタ機能の初期データ選択プルダウンから
直接初期データを読み込めるようになります。

また、いいねを押すことができ、
いいね数の多い初期データは、Code Library 一覧画面で上位に表示されるようになります。

何度も使いたい初期データはいいねやブックマークをしておきましょう！

※ ❤️は他ユーザーからのいいね数、💼は他ユーザーが該当の初期データを利用した数です。


これらの機能を利用して、
Rubyの標準メソッドを効率的に学習しましょう！
      </pre>
    </div>
  </section>

  <div class="mt-4">
    <div class="flex gap-2 justify-end">
      <%= search_form_for @q, url: code_libraries_path, method: :get,
            html: { class: "flex gap-2" } do |f| %>

        <div data-controller="autocomplete"
            data-autocomplete-list-url-value="<%= code_libraries_path %>"
            data-autocomplete-sort-value="<%= params[:sort].presence || 'popular' %>">
          <%= f.search_field :title_or_description_cont,
                value: @q.title_or_description_cont,
                placeholder: "検索（タイトル／説明）",
                class: "px-3 py-2 rounded ring-1 ring-slate-300 min-w-0 w-40 sm:w-56 md:w-72 lg:w-80",
                data: {
                  autocomplete_target: "input",
                  action: "input->autocomplete#onInput focus->autocomplete#onFocus blur->autocomplete#onBlur"
                } %>

          <!-- dropdown panel -->
          <div data-autocomplete-target="panel"
              class="hidden mt-1 w-full max-w-[20rem] rounded border border-slate-200 bg-white shadow-md"></div>
        </div>

        <%= select_tag :sort,
              options_for_select([["人気順","popular"],["利用数順","used"],["新着順","newest"]],
                                params[:sort].presence || "popular"),
              class: "px-3 py-2 rounded ring-1 ring-slate-300" %>

        <%= f.submit "検索",
              class: "btn-solid-red" %>
      <% end %>
    </div>

    <%# Code Library 向けのタグ検索（送り先を指定） %>
    <div class="flex mt-2 justify-end">
      <%= render "shared/tag_filter", url: code_libraries_path %>
    </div>

    <div class="flex mt-2 justify-end gap-2">
      <% keep = request.query_parameters.except(:only_bookmarked, :page) %>
      <% on = params[:only_bookmarked].present? %>
      <% url = on ? url_for(keep) : url_for(keep.merge(only_bookmarked: 1)) %>

      <%= link_to (on ? "ブックマークのみ：ON" : "ブックマークのみ"),
            url,
            class: "px-3 py-2 rounded #{on ? 'bg-blue-600 text-white' : 'ring-1 ring-slate-300'}" %>

      <%= link_to "使い方", help_path,
            class: "btn-solid-red" %>
    </div>
  </div>
</div>

<%# ===== 一覧 ===== %>
<% if @pre_codes.blank? %>
  <p class="text-slate-500">該当するデータがありません。</p>
<% else %>
  <ul class="space-y-3 -mt-2">
    <% @pre_codes.each do |pc| %>
      <li class="relative border rounded-xl p-4 group">
        <%# 透明の全体リンク（カード全面） %>
        <%= link_to code_library_path(pc),
              class: "absolute inset-0 rounded-xl focus:outline-none focus-visible:ring-2 focus-visible:ring-slate-300",
              "aria-label": "#{pc.title} の詳細" do %>
        <% end %>

        <div class="flex justify-between">
          <div class="flex-1 pr-4">
            <div class="font-semibold flex items-center gap-2">
              <%= pc.title %>
              <% if pc.answer.present? %>
                <span class="text-[10px] px-1.5 py-0.5 rounded bg-amber-200 text-amber-800">QUIZ</span>
              <% end %>
            </div>

            <%# タイトルの下に「静的」タグピルを表示（リンクなし・ネスト事故回避） %>
            <div class="mt-2">
              <%= render "shared/tag_pills_static", record: pc %>
            </div>

            <p class="text-sm text-slate-500 mt-2"><%= truncate(pc.description, length: 100) %></p>
          </div>

          <div class="shrink-0">
            <%= render "metrics", pre_code: pc %>
          </div>
        </div>

        <%# 下段：アクション（透明リンクを拾わないように） %>
        <div class="mt-3 flex items-center gap-2 pointer-events-none">
          <div class="pointer-events-auto z-20">
            <%= render "actions",
                  pre_code: pc,
                  current_like: (logged_in? ? pc.likes.find_by(user_id: current_user.id) : nil),
                  current_bookmark: (logged_in? ? pc.bookmarks.find_by(user_id: current_user.id) : nil) %>
          </div>
        </div>
      </li>
    <% end %>
  </ul>

  <div class="mt-6">
    <%= paginate @pre_codes, params: request.query_parameters %>
  </div>
<% end %>
