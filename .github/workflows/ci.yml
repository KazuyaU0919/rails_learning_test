name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  # --- Static analysis (Rails/Ruby) ---
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  # --- JS dependency audit (Importmap) ---
  scan_js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  # --- RuboCop only (テストは走らせない) ---
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Lint code for consistent style
        run: bin/rubocop -f github

  # --- RSpec ---
  rspec:
    runs-on: ubuntu-latest

    # Dockerサービスは使わない。DB接続は DATABASE_URL に統一
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/app_test
      JUDGE0_BASE_URL: https://judge0-ce.p.rapidapi.com
      JUDGE0_RAPIDAPI_KEY: ${{ secrets.JUDGE0_RAPIDAPI_KEY }}
      JUDGE0_HOST_HEADER: judge0-ce.p.rapidapi.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      # ← ここで VM に PostgreSQL をインストール＆起動
      - name: Set up PostgreSQL
        uses: ankane/setup-postgres@v2
        with:
          postgres-version: 15
          database: app_test
          username: postgres
          password: postgres

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            build-essential git pkg-config libpq-dev libyaml-dev \
            libvips libvips-dev
          ldconfig -p | grep libvips || true

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install JS deps
        run: npm ci

      - name: Build CSS (Tailwind v4 via PostCSS)
        run: npm run build:css

      - name: Prepare DB
        run: bin/rails db:prepare

      - name: Run RSpec
        run: bundle exec rspec
